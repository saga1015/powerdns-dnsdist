dofile('/etc/dnsdist/orderedwrandom.lua')
setServerPolicyLua("orderedwrandom", orderedwrandom)

-- Local Addresses to bind to
setLocal('0.0.0.0')      -- Listen on all addresses, port 53
addLocal('[::1]:53') -- Also listen on all ipv6 addresses, port 53
addLocal('[ipv6]') -- Also listen on port 53
addLocal('[ipv6]') -- Also listen on port 53

-- QUERY ACLS
-- Add our own IP space
setACL({'127.0.0.0/8', '10.0.0.0/8', '100.64.0.0/10', '169.254.0.0/16', '192.168.0.0/16', '172.16.0.0/12', '::1/128', 'fc00::/7', 'fe80::/10'})
addACL('ipv6/56')                   -- Add this subnet to the existing ACL
addACL('ipv4/28')                   -- Add this subnet to the existing ACL

-- Set NXDomain for suckers like google
dofile('/etc/powerdns/abuse.txt')

-- Get local DNS records for own domains
newServer({address="127.0.0.1:5301", pool="myDomain", order=1, checkType="A", checkName="www.reck.dk.", mustResolve=true, tcpRecvTimeout=10, tcpSendTimeout=10, retries=5, useClientSubnet=true})         -- Add a backend server with address 127.0.0.1 and assign it to the "myDomains" pool
newServer({address="external_ipv4:53", pool="myDomain", order=2, checkType="A", checkName="www.femjoynude.com.", mustResolve=true, tcpRecvTimeout=10, tcpSendTimeout=10, retries=5, useClientSubnet=true})
newServer({address="[::1]:5301", pool="myDomain", order=1, checkType="A", checkName="www.beauty-teens.com.", mustResolve=true, tcpRecvTimeout=10, tcpSendTimeout=10, retries=5, useClientSubnet=true})

addAction({'domain1.com.', 'domain2.com.', 'domain3.dk.', 'test.dk.', 'domain4.net.', 'domain5.com.'}, PoolAction("myDomain")) -- Send all queries for to the "myDomain" pool

-- Downstream Servers
newServer({address="[0::1]:5301", name="localhost pdns-recursor", qps=100, order=1, weight=1000, checkType="A", checkName="a.root-servers.net.", mustResolve=true, tcpRecvTimeout=10, tcpSendTimeout=10, retries=5, useClientSubnet=true})
newServer({address="127.0.0.1:5301", name="localhost pdns-recursor", qps=100, order=2, weight=1, checkType="A", checkName="b.root-servers.net.", mustResolve=true, tcpRecvTimeout=10, tcpSendTimeout=10, retries=5, useClientSubnet=true})

newServer({address="192.168.1.2:5301", name=".02", qps=100, order=3, weight=1, checkType="A", checkName="a.root-servers.net.", mustResolve=true, tcpRecvTimeout=10, tcpSendTimeout=10, retries=5, useClientSubnet=true})
newServer({address="192.168.1.3:5301", name=".03", qps=100, order=3, weight=1, checkType="A", checkName="b.root-servers.net.", mustResolve=true, tcpRecvTimeout=10, tcpSendTimeout=10, retries=5, useClientSubnet=true})
newServer({address="192.168.1.4:5301", name=".04", qps=100, order=3, weight=1, checkType="A", checkName="c.root-servers.net.", mustResolve=true, tcpRecvTimeout=10, tcpSendTimeout=10, retries=5, useClientSubnet=true})
newServer({address="192.168.1.5:5301", name=".05", qps=100, order=3, weight=1, checkType="A", checkName="d.root-servers.net.", mustResolve=true, tcpRecvTimeout=10, tcpSendTimeout=10, retries=5, useClientSubnet=true})

newServer({address="ipv4:53", name="domain.com", qps=100, order=3, weight=1})
setServerPolicy(firstAvailable) -- first server within its QPS limit
